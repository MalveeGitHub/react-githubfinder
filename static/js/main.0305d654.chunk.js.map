{"version":3,"sources":["components/GithubFinder.js","components/Repo.js","App.js","serviceWorker.js","index.js"],"names":["GithubFinder","state","data","notFound","userName","getUsers","e","preventDefault","axios","get","concat","_this","refs","username","value","then","res","setState","console","log","catch","error","react_default","a","createElement","className","onSubmit","this","placeholder","ref","type","src","avatar_url","height","width","alt","login","name","location","bio","Link","to","public_repos","public_gists","followers","following","target","href","html_url","Component","Repo","repo","_this2","props","match","params","map","rep","index","class","full_name","forks_count","stargazers_count","watchers_count","created_at","description","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0305d654.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./Css.css\";\nimport { Link } from \"react-router-dom\";\n\nclass GithubFinder extends Component {\n  state = {\n    data: \"\",\n    notFound: \"\",\n    userName: \"\"\n  };\n\n  getUsers = e => {\n    e.preventDefault();\n\n    axios\n      .get(\n        `https://api.github.com/users/${\n          this.refs.username.value\n        }?client_id=1f7d4bd7d76b1c687133&client_secret=e32a1efe1bd61540225d67e99796d8b6f6d865ca`\n      )\n      .then(res => {\n        this.setState({ data: res.data });\n        console.log(this.state.data);\n      })\n      .catch(error => this.setState({ notFound: \"User not Found!\" }));\n  };\n\n  render() {\n    return (\n      <div className=\"mt-4\">\n        <form onSubmit={this.getUsers}>\n          <input\n            placeholder=\"Enter Github User Name\"\n            ref=\"username\"\n            type=\"text\"\n            className=\"form-control\"\n          />\n        </form>\n\n        <div className=\"container mt-4\">\n          {this.state.data !== \"\" ? (\n            <div>\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <img\n                    className=\"userimg rounded\"\n                    src={this.state.data.avatar_url}\n                    height=\"300px\"\n                    width=\"auto\"\n                    alt=\"\"\n                  />\n                </div>\n                <div className=\"col-md-6\">\n                  <h5 className=\"text-info\">\n                    GitHub Username:{\" \"}\n                    <span className=\"text-danger\">{this.state.data.login}</span>\n                  </h5>\n                  <h5 className=\"text-info\">\n                    Username:{\" \"}\n                    <span className=\"text-danger\">{this.state.data.name}</span>\n                  </h5>\n                  <h5 className=\"text-info\">\n                    Location:{\" \"}\n                    <span className=\"text-danger\">\n                      {this.state.data.location}\n                    </span>\n                  </h5>\n                  <p className=\"lead text-info\">\n                    Bio:{\" \"}\n                    <span className=\"text-dark\">{this.state.data.bio}</span>\n                  </p>\n                  <div className=\"d-flex align-items-center justify-content-center\">\n                    <p>\n                      <Link\n                        to={`/repo/${this.state.data.login}`}\n                        className=\"d-block text-light rounded mr-2 p-2 bg-primary\"\n                      >\n                        Repo: {this.state.data.public_repos}\n                      </Link>\n                    </p>\n                    <p className=\"text-light rounded mr-2 p-2 bg-info\">\n                      Gist: {this.state.data.public_gists}\n                    </p>\n                    <p className=\"text-light rounded mr-2 p-2 bg-danger\">\n                      Followers: {this.state.data.followers}\n                    </p>\n                    <p className=\"text-light rounded mr-2 p-2 bg-dark\">\n                      Following: {this.state.data.following}\n                    </p>\n                  </div>\n                  <a\n                    target=\"_blank\"\n                    href={this.state.data.html_url}\n                    className=\"btn btn-info btn-block\"\n                  >\n                    Go To Profile\n                  </a>\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GithubFinder;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class Repo extends Component {\n  state = {\n    repo: \"\"\n  };\n  componentDidMount() {\n    axios\n      .get(\n        `https://api.github.com/users/${this.props.match.params.username}/repos`\n      )\n      .then(res => {\n        this.setState({ repo: res.data });\n        console.log(res.data);\n      });\n  }\n  render() {\n    if (this.state.repo !== \"\") {\n      return (\n        <div className=\"container\">\n          <h1>\n            {this.props.match.params.username}\n            's Repos\n          </h1>\n          {this.state.repo.map((rep, index) => (\n            <ul class=\"list-group mt-4\">\n              <li\n                class={\n                  index % 2 === 0\n                    ? \"list-group-item active text-uppercase\"\n                    : \"list-group-item bg-danger text-light text-uppercase\"\n                }\n              >\n                <b>{rep.full_name}</b>\n                {\"   \"} <span>Repo: {index}</span>\n              </li>\n              <div className=\"my-1 d-flex justify-content-center\">\n                <span className=\"bg-primary p-1 rounded mr-3\">\n                  Forks:\n                  {rep.forks_count}\n                </span>\n                <span className=\"bg-info p-1 rounded mr-3\">\n                  Stars:\n                  {rep.stargazers_count}\n                </span>\n                <span className=\"bg-danger p-1 rounded\">\n                  Watchers:\n                  {rep.watchers_count}\n                </span>\n              </div>\n              <li class=\"list-group-item\">Created: {rep.created_at}</li>\n              <li class=\"list-group-item\">Description: {rep.description}</li>\n\n              <li class=\"list-group-item\">\n                {\" \"}\n                <a\n                  href={rep.html_url}\n                  className=\"btn btn-outline-primary\"\n                  target=\"_blank\"\n                >\n                  Open Repo\n                </a>\n              </li>\n            </ul>\n          ))}\n          <div className=\"list-group mt-4\" />\n        </div>\n      );\n    } else {\n      return <h1>Loading</h1>;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport GithubFinder from \"./components/GithubFinder\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Repo from \"./components/Repo\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/react-githubfinder\" component={GithubFinder} />\n            <Route\n              exact\n              path=\"/react-githubfinder/repo/:username\"\n              component={Repo}\n            />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}